// Problem 2: Even Fibonacci Numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed n,
// find the sum of the even-valued terms.

function fiboEvenSum(n) {
  let fiboIntsToN = [1, 2];

  while (fiboIntsToN[fiboIntsToN.length - 1] <= n) {
    fiboIntsToN.push(
      fiboIntsToN[fiboIntsToN.length - 2] + fiboIntsToN[fiboIntsToN.length - 1]
    );
  }
  return fiboIntsToN
    .filter((item) => item % 2 === 0)
    .reduce((accumulator, currentValue) => accumulator + currentValue);
}

console.log(fiboEvenSum(8));
console.log(fiboEvenSum(10));
console.log(fiboEvenSum(34));
console.log(fiboEvenSum(60));
console.log(fiboEvenSum(1000));
console.log(fiboEvenSum(100000));
console.log(fiboEvenSum(4000000));
